name: GCP Deployment Workflow

on:
  push:
    branches:
      - main
    paths:
      - Deployment/**  # Trigger on changes in the Deployment folder
      - .github/workflows/**  # Trigger on changes in workflow files

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  BUCKET: ${{ secrets.GCP_BUCKET_NAME }}
  INGESTION_IMAGE_NAME: ingestion-pipeline
  PREDICTION_IMAGE_NAME: prediction-pipeline

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Authenticate to Google Cloud (v1 method)
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Step 3: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      # Step 4: Authenticate Docker for GCR
      - name: Authenticate Docker
        run: gcloud auth configure-docker

      # Step 5: Build and Push Ingestion Pipeline Docker Image
      - name: Build and Push Ingestion Docker Image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.INGESTION_IMAGE_NAME }}:latest -f Deployment/Dockerfile .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.INGESTION_IMAGE_NAME }}:latest

      # Step 6: Build and Push Prediction Pipeline Docker Image
      - name: Build and Push Prediction Docker Image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.PREDICTION_IMAGE_NAME }}:latest -f Deployment/Dockerfile .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.PREDICTION_IMAGE_NAME }}:latest

      # Step 7: Create Flex Template for Ingestion Pipeline
      - name: Create Ingestion Flex Template
        run: |
          gcloud dataflow flex-template build gs://$BUCKET/templates/ingestion_pipeline.json \
            --image gcr.io/$PROJECT_ID/$INGESTION_IMAGE_NAME:latest \
            --sdk-language "PYTHON"

      # Step 8: Create Flex Template for Prediction Pipeline
      - name: Create Prediction Flex Template
        run: |
          gcloud dataflow flex-template build gs://$BUCKET/templates/prediction_pipeline.json \
            --image gcr.io/$PROJECT_ID/$PREDICTION_IMAGE_NAME:latest \
            --sdk-language "PYTHON"

      # Step 9: Update or Create Cloud Scheduler for Ingestion
      - name: Update Cloud Scheduler for Ingestion
        run: |
          gcloud scheduler jobs update http ingestion-scheduler \
            --schedule "0 * * * *" \
            --uri "https://dataflow.googleapis.com/v1b3/projects/$PROJECT_ID/locations/$REGION/flexTemplates:launch" \
            --http-method POST \
            --message-body '{
              "jobName": "hourly-ingestion",
              "parameters": {
                "project": "'$PROJECT_ID'",
                "tempLocation": "gs://'$BUCKET'/temp/",
                "region": "'$REGION'"
              },
              "environment": {
                "tempLocation": "gs://'$BUCKET'/temp/"
              }
            }' \
            --location=$REGION || gcloud scheduler jobs create http ingestion-scheduler \
            --schedule "0 * * * *" \
            --uri "https://dataflow.googleapis.com/v1b3/projects/$PROJECT_ID/locations/$REGION/flexTemplates:launch" \
            --http-method POST \
            --message-body '{
              "jobName": "hourly-ingestion",
              "parameters": {
                "project": "'$PROJECT_ID'",
                "tempLocation": "gs://'$BUCKET'/temp/",
                "region": "'$REGION'"
              },
              "environment": {
                "tempLocation": "gs://'$BUCKET'/temp/"
              }
            }' \
            --location=$REGION

      # Step 10: Update or Create Cloud Scheduler for Prediction
      - name: Update Cloud Scheduler for Prediction
        run: |
          gcloud scheduler jobs update http prediction-scheduler \
            --schedule "0 0 * * *" \
            --uri "https://dataflow.googleapis.com/v1b3/projects/$PROJECT_ID/locations/$REGION/flexTemplates:launch" \
            --http-method POST \
            --message-body '{
              "jobName": "daily-prediction",
              "parameters": {
                "project": "'$PROJECT_ID'",
                "tempLocation": "gs://'$BUCKET'/temp/",
                "region": "'$REGION'"
              },
              "environment": {
                "tempLocation": "gs://'$BUCKET'/temp/"
              }
            }' \
            --location=$REGION || gcloud scheduler jobs create http prediction-scheduler \
            --schedule "0 0 * * *" \
            --uri "https://dataflow.googleapis.com/v1b3/projects/$PROJECT_ID/locations/$REGION/flexTemplates:launch" \
            --http-method POST \
            --message-body '{
              "jobName": "daily-prediction",
              "parameters": {
                "project": "'$PROJECT_ID'",
                "tempLocation": "gs://'$BUCKET'/temp/",
                "region": "'$REGION'"
              },
              "environment": {
                "tempLocation": "gs://'$BUCKET'/temp/"
              }
            }' \
            --location=$REGION
